@inherits LayoutComponentBase
@using BisleriumCafe.Model;
@using BisleriumCafe.Components.Reusables
@inject ISnackbar Snackbar;
@inject IDialogService DialogService;
@inject Microsoft.AspNetCore.Components.NavigationManager _navigationManager;
@inject BisleriumCafe.Services.SessionService _sessionService;
@inject BisleriumCafe.Services.AuthService _authService;
@inject BisleriumCafe.Repositories.Warehouse<User> _usersWarehouse;
@inject BisleriumCafe.Repositories.Warehouse<Member> _membersWarehouse;
@inject BisleriumCafe.Repositories.Warehouse<CoffeeType> _coffeeWarehouse;
@inject BisleriumCafe.Repositories.Warehouse<CoffeeAddIn> _addInsWarehouse;
@inject BisleriumCafe.Repositories.Warehouse<Order> _orderWarehouse;

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPaper Height="100vh" Width="100%" Style="overflow:hidden">
    <MudAppBar Dense="true" Elevation="0" Class="background-dense d-flex justify-space-between flex-grow-1">
        <MudItem Class="d-flex gap-3 align-items-center">
            <MudIconButton Class="color-dark" Icon="@Icons.Material.Filled.Menu" Edge="Edge.Start" OnClick="ToggleDrawer" Size="Size.Medium" />

            <MudItem Class="d-flex gap-2 align-items-center">
                <MudText Class="color-dark fw-bold ls-tighter" Typo="Typo.h5" Color="Color.Dark">Bislerium Cafe</MudText>

                <MudIcon Icon="@Icons.Material.Filled.Coffee" Size="Size.Medium" Class="color-dark" />
            </MudItem>

        </MudItem>

        <MudSpacer />
        <MudMenu Class="color-dark" Icon="@Icons.Material.Filled.Person" Size="Size.Medium">
            <MudMenuItem Link="/">Home</MudMenuItem>
            <MudMenuItem Link="explore">Explore</MudMenuItem>

            @if (_authService.CurrentUser is not null)
            {
                <MudMenuItem Link="profile">Profile</MudMenuItem>

                @if (_authService.CurrentUser.Role == UserRole.Admin)
                {
                    <MudMenuItem Link="coffee-type">Dashboard</MudMenuItem>
                }
                @if (_authService.CurrentUser.Role == UserRole.Staff)
                {
                    <MudMenuItem Link="dashboard/orders">Dashboard</MudMenuItem>
                }
                <MudMenuItem OnClick="@HandleLogOut">Logout</MudMenuItem>
            }
            else
            {

                <MudMenuItem Link="order-now">Order now</MudMenuItem>
            }
        </MudMenu>
    </MudAppBar>
    <div style="height: 48px;" />
    <MudDrawerContainer Class="mud-height-full background-dense" Style="overflow:hidden">
        <MudDrawer Height="auto" @bind-Open="@IsDrawerOpen" Elevation="0" Variant="@DrawerVariant.Persistent" Class="background-dense" Style="top:50%;transform:translateY(-50%)">
            <MudNavMenu>
                <MudNavLink Href="/" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Home" IconColor="Color.Dark" Class="d-flex align-items-center">
                    <MudText Typo="Typo.h6" Color="Color.Dark">Home</MudText>
                </MudNavLink>

                @if (_authService.CurrentUser is not null)
                {
                    @if (_authService.CurrentUser.Role == UserRole.Staff)
                    {
                        <MudNavLink Href="/order-now" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ShoppingCart" IconColor="Color.Dark" Class="d-flex align-items-center">
                            <MudText Typo="Typo.h6" Color="Color.Dark">Take Orders</MudText>
                        </MudNavLink>
                        <MudNavGroup Icon="@Icons.Material.Filled.Dashboard" Title="Dashboard" @bind-Expanded=IsDashboardMenuExpanded>
                            <MudNavLink Href="/dashboard/orders">Orders</MudNavLink>
                            <MudNavLink Href="/dashboard/overview">Reports</MudNavLink>
                        </MudNavGroup>

                    }
                    @if (_authService.CurrentUser.Role == UserRole.Admin)
                    {
                        <MudNavLink Href="/order-now" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ShoppingCart" IconColor="Color.Dark" Class="d-flex align-items-center">
                            <MudText Typo="Typo.h6" Color="Color.Dark">Take Orders</MudText>
                        </MudNavLink>
                        <MudNavGroup Icon="@Icons.Material.Filled.Dashboard" Title="Dashboard" @bind-Expanded=IsDashboardMenuExpanded>
                            <MudNavLink Href="/dashboard/coffee">Coffees</MudNavLink>
                            <MudNavLink Href="/dashboard/addins">Add-Ins</MudNavLink>
                            <MudNavLink Href="/dashboard/staffs">Staffs</MudNavLink>
                            <MudNavLink Href="/dashboard/overview">Reports</MudNavLink>
                        </MudNavGroup>

                    }
                    @if (_authService.CurrentMember is not null)
                    {
                        <MudNavLink Href="/my-orders" Icon="@Icons.Material.Filled.ShoppingBasket" IconColor="Color.Dark" Class="d-flex align-items-center">
                            <MudText Typo="Typo.h6" Color="Color.Dark">@_authService.CurrentMember.UserName Orders</MudText>
                        </MudNavLink>
                    }

                    <MudNavLink Href="/profile" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Person" IconColor="Color.Dark" Class="d-flex align-items-center">
                        <MudText Typo="Typo.h6" Color="Color.Dark">Profile</MudText>
                    </MudNavLink>


                    <MudNavLink OnClick="@HandleLogOut" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Person" IconColor="Color.Dark" Class="d-flex align-items-center">
                        <MudText Typo="Typo.h6" Color="Color.Dark">Logout</MudText>
                    </MudNavLink>

                }
                else
                {

                    <MudNavLink Href="/login" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Person" IconColor="Color.Dark" Class="d-flex align-items-center">
                        <MudText Typo="Typo.h6" Color="Color.Dark">Login</MudText>
                    </MudNavLink>
                }

            </MudNavMenu>
        </MudDrawer>

        <div class="d-flex flex-column gap-4 mud-height-full background-light p-4" style="overflow-y:scroll;padding-bottom:6rem !important;">
            @Body
        </div>
    </MudDrawerContainer>
</MudPaper>
@code {
    bool IsDrawerOpen = true;
    bool IsDashboardMenuExpanded = false;

    // Repositories


    protected override async Task OnInitializedAsync()
    {
        await _usersWarehouse.LoadAsync();
        await _membersWarehouse.LoadAsync();
        await _coffeeWarehouse.LoadAsync();
        await _addInsWarehouse.LoadAsync();
        await _orderWarehouse.LoadAsync();

        try
        {
            await _authService.InitializeAdminOnFirstRun();
            await _authService.CheckSession();
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, MudBlazor.Severity.Error);
        }
    }

    void ToggleDrawer()
    {
        IsDrawerOpen = !IsDrawerOpen;
        StateHasChanged();
    }

    async void HandleLogOut()
    {
        var parameters = new DialogParameters<Dialog>();
        parameters.Add("Title", "Logout");
        parameters.Add("TitleIcon", Icons.Material.Filled.DoorSliding);
        parameters.Add("ConfirmButtonText", "Confirm");
        parameters.Add("ConfirmButtonColor", Color.Dark);

        RenderFragment rf =@<MudText Typo="Typo.body1" Color="Color.Dark"> Are you sure you want to log out?</MudText>;

        parameters.Add(nameof(Dialog.ChildContent), rf);

        var dialog = await DialogService.ShowAsync<Dialog>("Log Out", parameters);
        var result = await dialog.Result;
        if (!result.Canceled)
        {
            try
            {
                _authService.LogOut();
                Snackbar.Add("Logged out successfully", MudBlazor.Severity.Success);
                _navigationManager.NavigateTo("/");
            }
            catch (Exception ex)
            {
                Snackbar.Add(ex.Message, MudBlazor.Severity.Error);
            }
        }
    }
}